#!/usr/bin/env julia

# Pre-commit hook to format Julia files using JuliaFormatter
# Uses the test/Project.toml environment if it exists

using Pkg

repo_root = dirname(dirname(@__DIR__))
cd(repo_root)

test_project = joinpath(repo_root, "test", "Project.toml")
if isfile(test_project)
    Pkg.activate(joinpath(repo_root, "test"))
else
    Pkg.activate(repo_root)
end

try
    using JuliaFormatter
catch
    println("Installing JuliaFormatter...")
    Pkg.add("JuliaFormatter")
    using JuliaFormatter
end

function over_staged(callback::Function)
    formatted_any = false
    for maybe_file in readlines(`git diff --cached --name-only --diff-filter=ACM`)
        if endswith(maybe_file, ".jl")
            formatted_any |= callback(maybe_file)
        end
    end
    return formatted_any
end

formatted_any = over_staged() do toformat
    if isfile(toformat)
        if !format_file(toformat)
            println("  ✓ $toformat (already formatted)")
        else
            println("  ✔ $toformat (formatted)")
            # Re-stage the formatted file
            run(`git add $toformat`)
        end
    end
end

if formatted_any
    println("\nFiles were formatted and re-staged. Please review the changes.")
end

exit(0)
